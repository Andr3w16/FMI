1. Se dau n cuburi cu laturile diferite doua cate doua. Fiecare cub are o culoare, codificata cu un numar de la 1 la p (p dat). Sa se 
construiasca un turn de inaltime maxima de cuburi in care un cub nu poate fi asezat pe un cub de aceeasi culoare sau cu latura mai mica 
decat a sa - O(n log n). Justificati corectitudinea algoritmului propus. In cazul in care lungimile laturilor cuburilor nu erau 
diferite mai este valabila metoda propusa? Justificati. Exemplu: pentru n = 4, p = 2 si cuburi cu caracteristicile latura/culoare: 5/1, 
10/1, 9/1, 8/2, o solutie este turnul cu cuburile 10/1, 8/2, 5/1. Se aleg 3 cuburi, cuburile 2 4 si 1 (in ordinea datelor de intrare) si se 
obtine inaltimea 23.

date.in           date.out
4 2               3 23
5 1               2 4 1
10 1
9 1
8 2

2. a)Se dau n texte cu lungimile L(1),..., L(n) urmeaza a fi asezate pe o banda. Pentru a citi textul de pe pozitia k, trebuie citite 
textele de pe pozitiile 1, 2, ..., k. Pentru fiecare text i se cunoaste si frecventa f(i) cu care acesta este citit. Sa se determine o 
modalitate de asezare a textelor pe banda astfel incat timpul total de acces sa fie minimizat. Timpul total de acces pentru o asezare a 
textelor corespunzatoare unei permutari p se defineste ca fiind f(p1)(L1) + f(p2)(L1+L2) + ... + f(pi)(Lp1+ ... Lpi).

b) Se dau n texte cu lungimile L(1),..., L(n) urmeaza a fi asezate pe p benzi (p dat). Pentru a citi textul de pe pozitia k de pe o banda, 
trebuie citite textele e pe pozitiile 1,2,...,k de pe aceea banda. Fiecare text are aceeasi frecventa de citire. Sa se determine o 
modalitate de asezare a textelor pe cele p benzi astfel incat timpul total de acces sa fie minimizat (= suma timpului total de acces pentru 
fiecare din cele p benzi).

3. Se considera o multime de n activitati care trebuie planificate pentru a folosi o aceeasi resursa. Aceasta resursa poate fi folosita de o 
singura activitate la un moment dat. Toate activitatile au aceeasi durata (sa presupunem 1). Pentru fiecare activitate i se cunosc termenul 
limita pana la care se poate executa ti (raportat la ora de inceput 0, 1 <= ti <= n) si profitul pi care se primeste daca activitatea i se 
executa la timp (cu respectarea termenului limita). Se cere sa se determine o submultime de activitati care se pot planifica astfel incat 
profitul total obtinut sa fie maxim.

Pentru n = 4 si 

p1 = 4, t1 = 3
p2 = 1, t2 = 1
p3 = 2, t3 = 1
p4 = 5, t4 = 3
o solutie optima se obtine daca planificam activitatile in ordinea 3, 4, 1 profitul obtinut fiind p3 + p4 + p1 = 2 + 5 + 4 = 11

date.in                   date.out
4                         11
4 3                       3 4 1
1 1
2 1
5 3
